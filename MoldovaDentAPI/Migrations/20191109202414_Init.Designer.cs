// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoldovaDentAPI.Persistence;

namespace MoldovaDentAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191109202414_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoldovaDentAPI.Persistence.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int?>("ProfileId");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("MoldovaDentAPI.Persistence.Models.AppointmentVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("AdjustedDuration");

                    b.Property<decimal>("AdjustedPrice");

                    b.Property<int>("AppointmentId");

                    b.Property<int?>("ProcedureId");

                    b.Property<string>("ProcedureName");

                    b.Property<DateTime>("TimeOfVisit");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("AppointmentVisits");
                });

            modelBuilder.Entity("MoldovaDentAPI.Persistence.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName");

                    b.Property<int>("IncorrectAttempts");

                    b.Property<bool>("IsEmailVerified");

                    b.Property<string>("LastName");

                    b.Property<DateTime?>("LockDate");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("MoldovaDentAPI.Persistence.Models.Appointment", b =>
                {
                    b.HasOne("MoldovaDentAPI.Persistence.Models.Profile")
                        .WithMany("Appointments")
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("MoldovaDentAPI.Persistence.Models.AppointmentVisit", b =>
                {
                    b.HasOne("MoldovaDentAPI.Persistence.Models.Appointment", "Appointment")
                        .WithMany("AppointmentVisits")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
